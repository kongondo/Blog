<?php namespace ProcessWire;

/**
* Blog Post Publish Date Module for ProcessWire.
*
* This small autoload module sets a Blog Post's published date (field = 'blog_date')
* Based on the code here: https://processwire.com/talk/topic/2448-show-date-published-on-a-page/ by SiNNuT and Soma
*
* @author Francis Otieno (Kongondo) <kongondo@gmail.com>
* @author Some code from SiNNuT, Soma
*
* https://github.com/kongondo/Blog
* Created August 2014
*
* ProcessWire 3.x
* Copyright (C) 2016 by Ryan Cramer
* Licensed under GNU/GPL v2, see LICENSE.TXT
*
* http://www.processwire.com
*
*/

class BlogPublishDate extends WireData implements Module {

	/**
	 * Return information about this module (required).
	 *
	 *	@access public
	 *	@return array module info
	 *
	 */
	public static function getModuleInfo() {

		return array(
			'title' => 'Blog Post Publish Date',
			'summary' => 'Automatically set a Blog Post publish date on publish',
			'author' => 'Francis Otieno (Kongondo)',
			'version' => '2.4.4',
			'href' => 'https://processwire.com/talk/topic/17105-module-blog/',
			'singular' => true,
			'autoload' => true,
			'requires' => 'ProcessBlog'

		);

	}

	/**
	 *	Initialise the module.
	 *
	 * ProcessWire calls this when the module is loaded. For 'autoload' modules, this will be called.
	 * when ProcessWire's API is ready. As a result, this is a good place to attach hooks.
	 *
	 *	@access public
	 *
	 */
	public function init() {
		// add a hook after $page->save (only on Blog Posts pages)
        $this->wire('pages')->addHookAfter('save', $this, 'afterSave');

	}

	/**
	 *	Hook to set a Blog Post's 'published date' (if not set already) when a Blog Post is published.
	 *
	 *  This function will not empty any values extant in 'blog_date'.
 	 *	This is to preserve the original Blog Post publish date.
 	 *
 	 *	@access public
	 *
	 */
	public function afterSave($event) {

		// get the page object saved
	    $page = $event->argumentsByName('page');

	    // only on pages that use the template 'blog-post
	    if($page->template !='blog-post' ) return;

	    /*	- we don't want to touch unpublished pages ['pending' and 'expired']
	    	- neither published pages with blog_date already filled in
	    	- nor if for some reason field 'blog_date' not found in the 'blog-post' template and page is published
	   	*/

	    if($page->is(Page::statusUnpublished) || $page->blog_date || !$page->template->hasField('blog_date')) return;

	    // if page is published and blog_field not populated, add current timestamp
	    $page->blog_date = time();
	    $page->save('blog_date');

	}

	/**
	 * 	Called only when the module is installed.
	 *
	 *	@access public
	 *
	 */
	public function ___install() {

		// Don't need to add anything here...

	}

	/**
	 *	Called only when the module is uninstalled.
	 *
	 *	This should return the site to the same state it was in before the module was installed.
	 *
	 *	@access public
	 *
	 */
	 public function ___uninstall() {

		// Don't need to add anything here...

	}


}
